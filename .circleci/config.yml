# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  slack: circleci/slack@4.1
  
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # job의 이름을 정의, 굳이 build로 할 필요는 없지만 일반적으로 build를 사용한다.
  build:
    # 빌드를 실행할 도커 이미지를 설정한다.
    # circleci에서 제공하는 이미지를 사용해야 한다.
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
      # Ethereum의 프로그래밍 언어인 Go 컴파일을 해야하므로 go 이미지 세팅
      - image: circleci/golang:1.9

    # Go의 workspace를 설정해준다.
    working_directory: /go/src/github.com/id0min/cicd-go-sample
    
    steps:
      # Deploy의 과정을 한단계씩 정의한다.
      # 소스를 checkout 하는 과정
      - checkout
      # 코드 전체를 컴파일 하는 과정
      - run: go build
      # 테스트 실행
      - run: go test
      # 테스트 성공시 good 출력
      - run: echo "good"

  notify:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "*CICD CircleCI Research sample*",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
          event: always
          
workflows:
  version: 2
  build:
    jobs:
      # 위에서 작성한 job의 이름을 기입하면 된다.
      - build

  send-notification:
    jobs:
      - notify:
          context: slack-secrets
